service: keyforge-decks

custom:
  registeredDeckCountsTable: 'keyforge-decks-${self:provider.stage}-registereddeckcounts'

provider:
  name: aws
  runtime: nodejs16.x
  stage: ${opt:stage, 'dev'}
  region: ${opt:region, 'us-east-1'}
  iam:
    role:
      name: keyforge-decks
      statements:
        - Effect: Allow
          Action:
            - dynamodb:Query
            - dynamodb:Scan
            - dynamodb:GetItem
            - dynamodb:PutItem
            - dynamodb:UpdateItem
            - dynamodb:DeleteItem
          Resource: !GetAtt RegisteredDeckCountsTable.Arn

functions:
  deckCount:
    handler: stats/decks.registeredCount
    name: ${opt:stage, self:provider.stage}-keyforge-decks-count
    description: Get the count of registered Keyforge Decks
    memorySize: 128
    timeout: 6
    events:
      - schedule: rate(5 minutes)
    environment:
        REGISTERED_DECKS_COUNT_TABLE: ${self:custom.registeredDeckCountsTable}

resources:
  Resources:
    RegisteredDeckCountsTable:
      Type: 'AWS::DynamoDB::Table'
      Properties:
        TableName: ${self:custom.registeredDeckCountsTable}
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        AttributeDefinitions:
          - AttributeName: date
            AttributeType: S
          - AttributeName: timestamp
            AttributeType: N
        KeySchema:
          - AttributeName: date
            KeyType: HASH
          - AttributeName: timestamp
            KeyType: RANGE

  Outputs:
    DeckCountsTableName:
      Description: "Table Name for registered deck counts"
      Value: !Ref RegisteredDeckCountsTable
